version: '3.8'

networks:
  labresults-network:
    driver: bridge

services:
  mysqldb:
    container_name: mysqldb
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=P4SSW0RD
      - MYSQL_DATABASE=labresults
      - MYSQL_USER=labresults
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - db-data1:/var/lib/mysql
    networks:
      - labresults-network

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=labresults
    ports:
      - "5432:5432"
    networks:
      - labresults-network
    volumes:
      - db-data2:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  eureka-server:
    container_name: eureka-server
    build:
      context: .
      dockerfile: /eureka-server/Dockerfile
    restart: always
    ports:
      - "8761:8761"
    networks:
      - labresults-network
    depends_on:
      - mysqldb

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: /api-gateway/Dockerfile
    restart: always
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    ports:
      - "8080:8080"
    networks:
      - labresults-network
    depends_on:
      - eureka-server

  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: /auth-service/Dockerfile
    restart: always
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    ports:
      - "8081:8081"
    networks:
      - labresults-network
    depends_on:
      - api-gateway

  order-service:
    container_name: order-service
    build:
      context: .
      dockerfile: /order-service/Dockerfile
    restart: always
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/labresults
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    ports:
      - "8083:8083"
    networks:
      - labresults-network
    depends_on:
      - api-gateway
      - rabbitmq

  customer-service:
    container_name: customer-service
    build:
      context: .
      dockerfile: /customer-service/Dockerfile
    restart: always
    environment:
      spring.datasource.url: jdbc:postgresql://postgres:5432/labresults
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    ports:
      - "8084:8084"
    networks:
      - labresults-network
    depends_on:
      - api-gateway

volumes:
  db-data1:
  db-data2:
  rabbitmq-data: